#!/bin/sh
### BEGIN INIT INFO
# Provides:          delayed_job
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start delayed_job as a service
# Description:       Make delayed_job a service
### END INIT INFO

# Author: nicholas long (nicholas.long@nrel.gov)

set -e

DESC="Run delayed_job for Rails"
NAME=delayed_job
RUBYENV=<%= node[:openstudio_server][:ruby_path] %>
DIRHOME=<%= node[:openstudio_server][:server_path] %>/script
DAEMON=$DIRHOME/$NAME

# load the init functions
. /lib/lsb/init-functions

stop_delayed_job()
{
  # Stop the delayed_job daemon
  export PATH=$RUBYENV/shims:$RUBYENV/bin:$PATH
  RAILS_ENV=<%= node[:openstudio_server][:rails_environment] %> $DAEMON --pid-dir=/var/run stop
}

start_delayed_job()
{
  log_daemon_msg `env`
  export PATH=$RUBYENV/shims:$RUBYENV/bin:$PATH
  log_daemon_msg `env`
  RAILS_ENV=<%= node[:openstudio_server][:rails_environment] %> $DAEMON --pid-dir=/var/run start
}

case "$1" in
  start)
    log_daemon_msg "Starting delayed_job"
    if start_delayed_job; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
  ;;

  stop)
    log_daemon_msg "Stopping delayed_job"
    if stop_delayed_job; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
  ;;

  restart)
    log_daemon_msg "Stopping delayed_job for restart"
    stop_delayed_job
    log_end_msg 0
    sleep 2
    log_daemon_msg "Restarting delayed_job"
    start_delayed_job
    log_end_msg 0
  ;;

  status)
    status
  ;;

  *)
    echo "Usage: $NAME {start|stop|restart}"
    exit 1
  ;;

esac
