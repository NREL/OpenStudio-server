<%
# *******************************************************************************
# OpenStudio(R), Copyright (c) 2008-2016, Alliance for Sustainable Energy, LLC.
# All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# (1) Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# (2) Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# (3) Neither the name of the copyright holder nor the names of any contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission from the respective party.
#
# (4) Other than as required in clauses (1) and (2), distributions in any form
# of modifications or other derivative works may not use the "OpenStudio"
# trademark, "OS", "os", or any other confusingly similar designation without
# specific prior written permission from Alliance for Sustainable Energy, LLC.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER, THE UNITED STATES
# GOVERNMENT, OR ANY CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# *******************************************************************************
%>

<%= javascript_tag do %>
  jv_status = '<%= j status %>';
<% end %>

<div id='<%= "#{status || ''}simulations"%>'>

<% if simulations.size == 0 %>
  <p style="padding-top:10px;">There are no simulations to display.</p>
<% else %>
  <div class="row-fluid">
    <div class="span9">
      <h3><% if status == 'na' %>Initialized <% else %><%= status.humanize %><% end %> Simulations </h3>
    </div>
    <div class="span3">
      <%= form_tag analysis_path(@analysis), :method => 'get' do %>
          <p>
            <%= text_field_tag "#{status}_search", params["#{status}_search"] %>
            <%= hidden_field_tag('status', status) %>
            <%= hidden_field_tag('all_page', all_page) %>
            <%= hidden_field_tag('completed_page', completed_page) %>
            <%= hidden_field_tag('started_page', started_page) %>
            <%= hidden_field_tag('queued_page', queued_page) %>
            <%= hidden_field_tag('na_page', na_page) %>
            <%= submit_tag "Search", :name => nil %>
          </p>
      <% end %>
    </div>
  </div>
  <div class="row-fluid">
    <div class="table-pad">
      <!--toggle obj function is there are more than 3-->

      <% class_var = "" %>
      <% if @objective_functions.count > 3 %>
        <div class="button-container">
          <button class="btn btn-mini" id='<%= "toggle-button-#{status || ''}"%>'>Toggle Obj Functions</button>
          <% class_var = "obj-function-col-" + status %>
        </div>
      <% end %>

      <!--toggle view_all on ALL page -->
      <br/>

      <% if status == 'all' and @view_all == 0 %>
        <div class="button-container">
          <%= link_to("View All", analysis_path(:id => @analysis, :view_all => 1, :status => status,
                                                :all_page => all_page, :completed_page => completed_page,
                                                :started_page => started_page, :queued_page => queued_page,
                                                :na_page => na_page), :class => "btn btn-mini") %></button>
        </div>
      <% elsif status == 'all' and @view_all == 1 %>
        <div class="button-container">
          <%= link_to("Paginate", analysis_path(:id => @analysis.id, :status => status,
                                                :view_all => 0), :class => "btn btn-mini") %>
        </div>
      <% end %>

      <table id="datapointtable_<%= status%>" class="tablesorter table table-striped">
        <thead>
        <tr>
          <th>Name</th>
          <th class="other-col">Status</th>
          <th class="other-col">Status Message</th>
          <% @objective_functions.each do |ov| %>
              <th class="<%= class_var %>">Obj Func <%= ov['display_name'] %> </th>
          <% end %>
          <th class="other-col">Start Time (UTC)</th>
          <th class="other-col">End Time (UTC)</th>
          <th class="other-col">Delta Time (s)</th>
          <th>View</th>
          <th class="other-col">Action</th>
        </tr>
        </thead>
        <tbody>
        <% simulations.each do |dp| %>
            <tr>
              <td> <%= link_to "#{dp.name}", data_point_path(dp) %></td>
              <td class="other-col"><%= dp.status %></td>
              <td class="other-col"><%= dp.status_message if dp.status_message %></td>
              <% @objective_functions.each do |ov| %>
                <!-- TODO: This is horrible. Can we use an ostruct? send the data from the contoller -->
                <td class="<%= class_var %>">
                  <% if dp.results[ov['name'].split(".")[0]] && dp.results[ov['name'].split(".")[0]][ov['name'].split(".")[1]] %>
                    <% if dp.results[ov['name'].split(".")[0]][ov['name'].split(".")[1]] =~ /\A[-+]?[0-9]*\.?[0-9]+\Z/ %>
                      <%= dp.results[ov['name'].split(".")[0]][ov['name'].split(".")[1]].round(2) %>   
                    <% else %>
                      <%= dp.results[ov['name'].split(".")[0]][ov['name'].split(".")[1]] %>
                    <% end %>
                  <% end %>
                </td>
              <% end %>
              <td class="other-col"> <%= dp.run_start_time.strftime("%m-%d-%Y %H:%M:%S") unless dp.run_start_time.nil? %> </td>
              <td class="other-col"> <%= dp.run_end_time.strftime("%m-%d-%Y %H:%M:%S") unless dp.run_end_time.nil? %> </td>
              <td class="other-col"><%= ((dp.run_end_time.to_f - dp.run_start_time.to_f)).round(2) unless dp.run_end_time.nil? || dp.run_start_time.nil? %></td>
              <td><%= link_to 'View', data_point_path(dp) %>
                | <%= link_to 'JSON', data_point_path(dp, :format => :json) %>
                  <% dp.result_files.where(type: 'Data Point').each do |h| %>
                    | <%= link_to 'Zip File', download_result_file_data_point_path(dp, filename: h.attachment.original_filename) %>
                  <% end %>
                <% if dp.status == 'completed' && @has_obj_targets %>
                  | <%= link_to('Bar Chart', plot_bar_analysis_path(:id => @analysis.id, :datapoint_id => dp.id)) %>
                  | <%= link_to('Radar Plot', plot_radar_analysis_path(:id => @analysis.id, :datapoint_id => dp.id)) %>
                <% end %>
              <td class="other-col"><%= link_to 'Destroy', dp, method: :delete, data: {confirm: 'Are you sure?'} %></td>
            </tr>
        <% end %>
        </tbody>
      </table>
    </div>

    <% if @view_all != 1 %>
      <%= paginate simulations.page(current), :params => { :status => status, :all_page => all_page, :completed_page => completed_page, :started_page => started_page, :queued_page => queued_page, :na_page => na_page } %>
    <% end %>
  </div>

<% end %>
</div>



