# AUTHOR:           Nicholas Long
# DESCRIPTION:      OpenStudio Server Docker Container
# TO_BUILD_AND_RUN: docker-compose up
# NOTES:            Currently this is one big dockerfile and non-optimal.

FROM ubuntu:14.04
MAINTAINER Nicholas Long nicholas.long@nrel.gov
ARG rails_env=docker-dev

RUN sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10 && \
    echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse" | \
    sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list && \
    apt-get update \
	&& apt-get install -y --no-install-recommends \
        apt-transport-https \
        autoconf \
        bison \
        build-essential \
        bzip2 \
        ca-certificates \
        curl \
        default-jdk \
        dos2unix \
        imagemagick \
        gdebi-core \
        git \
        libbz2-dev \
        libcurl4-openssl-dev \
        libdbus-glib-1-2 \
        libgdbm3 \
        libgdbm-dev \
        libglib2.0-dev \
        libglu1 \
        libgsl0ldbl \
        libgsl0-dev \
        libncurses-dev \
        libreadline-dev \
        libxml2-dev \
        libxslt-dev \
        libffi-dev \
        libssl-dev \
        libyaml-dev \
        libice-dev \
        libsm-dev \
        mongodb-org-tools \
        procps \
        tar \
        unzip \
        wget \
        zip \
        zlib1g-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Ruby
ADD /docker/deployment/scripts/install_ruby.sh /usr/local/bin/install_ruby.sh
RUN /usr/local/bin/install_ruby.sh 2.2.4 b6eff568b48e0fda76e5a36333175df049b204e91217aa32a65153cc0cdcb761

# Install Ruby globally and don't create ".bundle" in all our apps
ENV GEM_HOME /usr/local/bundle
ENV BUNDLE_PATH="$GEM_HOME" \
    BUNDLE_BIN="$GEM_HOME/bin" \
    BUNDLE_SILENCE_ROOT_WARNING=1 \
    BUNDLE_APP_CONFIG="$GEM_HOME"
ENV PATH $BUNDLE_BIN:$PATH
RUN mkdir -p "$GEM_HOME" "$BUNDLE_BIN" \
    && chmod 777 "$GEM_HOME" "$BUNDLE_BIN"

# Install OpenStudio
ADD /docker/deployment/scripts/install_openstudio.sh /usr/local/bin/install_openstudio.sh
ENV OPENSTUDIO_VERSION 2.4.0
ENV OPENSTUDIO_SHA f58a3e1808
RUN /usr/local/bin/install_openstudio.sh $OPENSTUDIO_VERSION $OPENSTUDIO_SHA

# Add RUBYLIB link for openstudio.rb and Radiance env vars
ENV RUBYLIB /usr/Ruby
ENV OPENSTUDIO_SERVER 'true'
ENV OS_RAYPATH /usr/Radiance
ENV PERL_EXE_PATH /usr/bin

# Set the rails env var
ENV RAILS_ENV $rails_env
ENV GECKODRIVER_VERSION v0.15.0

# Configure IPVS keepalive
ADD /docker/server/ipvs-keepalive.conf /etc/sysctl.d/ipvs-keepalive.conf
RUN sudo sysctl --system

### ADD Gemfile to cache the installation of Gems. If you change the Gemfile, then you will need to rebuild
### your docker containers
ADD /bin /opt/openstudio/bin
ADD /server/Gemfile /opt/openstudio/server/Gemfile
WORKDIR /opt/openstudio/server
RUN bundle install --jobs=3 --retry=3

#### OpenStudio Server Code
VOLUME ["/opt/openstudio"]

# Define working directory
WORKDIR /opt/openstudio/server

COPY /docker/server/start-server-dev.sh /usr/local/bin/start-server-dev
COPY /docker/server/run-server-tests.sh /usr/local/bin/run-server-tests
RUN chmod +x /usr/local/bin/start-server-dev
RUN chmod +x /usr/local/bin/run-server-tests

COPY /docker/server/rails-entrypoint.sh /usr/local/bin/rails-entrypoint
RUN chmod 755 /usr/local/bin/rails-entrypoint
ENTRYPOINT ["rails-entrypoint"]

CMD ["/usr/local/bin/start-server-dev"]

# Expose ports.
EXPOSE 8080 9090
